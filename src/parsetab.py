
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBleftMULDIVrightEXPrightUMINUSADD BOOLEAN DECREMENT DIV EQ EXP FLOAT GT GTE ID INCREMENT INT LPAREN LT LTE MUL NEQ RPAREN SUBstatement : expressionexpression : expression ADD expression\n                  | expression SUB expression\n                  | expression MUL expression\n                  | expression DIV expression\n                  | expression EXP expressionexpression : SUB expression %prec UMINUSexpression : LPAREN expression RPARENexpression : INT\n                  | FLOATexpression : IDexpression : BOOLEAN'
    
_lr_action_items = {'SUB':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,],[3,10,3,3,-9,-10,-11,-12,3,3,3,3,3,-7,10,-2,-3,-4,-5,-6,-8,]),'LPAREN':([0,3,4,9,10,11,12,13,],[4,4,4,4,4,4,4,4,]),'INT':([0,3,4,9,10,11,12,13,],[5,5,5,5,5,5,5,5,]),'FLOAT':([0,3,4,9,10,11,12,13,],[6,6,6,6,6,6,6,6,]),'ID':([0,3,4,9,10,11,12,13,],[7,7,7,7,7,7,7,7,]),'BOOLEAN':([0,3,4,9,10,11,12,13,],[8,8,8,8,8,8,8,8,]),'$end':([1,2,5,6,7,8,14,16,17,18,19,20,21,],[0,-1,-9,-10,-11,-12,-7,-2,-3,-4,-5,-6,-8,]),'ADD':([2,5,6,7,8,14,15,16,17,18,19,20,21,],[9,-9,-10,-11,-12,-7,9,-2,-3,-4,-5,-6,-8,]),'MUL':([2,5,6,7,8,14,15,16,17,18,19,20,21,],[11,-9,-10,-11,-12,-7,11,11,11,-4,-5,-6,-8,]),'DIV':([2,5,6,7,8,14,15,16,17,18,19,20,21,],[12,-9,-10,-11,-12,-7,12,12,12,-4,-5,-6,-8,]),'EXP':([2,5,6,7,8,14,15,16,17,18,19,20,21,],[13,-9,-10,-11,-12,-7,13,13,13,13,13,13,-8,]),'RPAREN':([5,6,7,8,14,15,16,17,18,19,20,21,],[-9,-10,-11,-12,-7,21,-2,-3,-4,-5,-6,-8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'expression':([0,3,4,9,10,11,12,13,],[2,14,15,16,17,18,19,20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> expression','statement',1,'p_statement_expr','WalS.py',71),
  ('expression -> expression ADD expression','expression',3,'p_expression_binop','WalS.py',75),
  ('expression -> expression SUB expression','expression',3,'p_expression_binop','WalS.py',76),
  ('expression -> expression MUL expression','expression',3,'p_expression_binop','WalS.py',77),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','WalS.py',78),
  ('expression -> expression EXP expression','expression',3,'p_expression_binop','WalS.py',79),
  ('expression -> SUB expression','expression',2,'p_expression_unary_minus','WalS.py',92),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','WalS.py',96),
  ('expression -> INT','expression',1,'p_expression_number','WalS.py',100),
  ('expression -> FLOAT','expression',1,'p_expression_number','WalS.py',101),
  ('expression -> ID','expression',1,'p_expression_var','WalS.py',105),
  ('expression -> BOOLEAN','expression',1,'p_expression_boolean','WalS.py',110),
]
